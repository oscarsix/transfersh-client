#!/usr/bin/env python3

import argparse
import tempfile
from pathlib import Path
import sys
from transfersh_client import TransfershClient
import yaml

verbose = 0
config = None
files_or_dirs = list()

home_transfershrc = Path.home().joinpath('.transfersh/config.yaml')
etc_transfershrc = Path('/etc/transfersh/config.yaml')

if home_transfershrc.is_file():
    config = yaml.load(home_transfershrc.read_text())
elif etc_transfershrc.is_file():
    config = yaml.load(etc_transfershrc.read_text())

argparse_server_required = True if config is None else False
argparse_files_required = True if sys.stdin.isatty() else False


parser = argparse.ArgumentParser(description='Transfersh client.')
parser.add_argument('--verbose', '-v', action='count')
if argparse_files_required:
    parser.add_argument('files', metavar='F', nargs='+', help="Files for upload")
parser.add_argument('--server', help='Transfersh server url', required=argparse_server_required)
parser.add_argument('-d', '--max-downloads', help='Max possible downloads', required=False, default=100)
parser.add_argument('-t', '--max-days', help='Max days saved', required=False, default=30)
args = parser.parse_args()

if args.server:
    config['server'] = args.server
transfersh_client = TransfershClient(config)


def stderrprint(*printargs, **kwargs):
    print(*printargs, file=sys.stderr, **kwargs)


results = list()
if sys.stdin.isatty():
    results = transfersh_client.upload(
        files=args.files,
        max_downloads=args.max_downloads,
        max_days=args.max_days)
else:
    with tempfile.NamedTemporaryFile() as tmpfile:
        tmpfile.write(str.encode(sys.stdin.read()))
        tmpfile.flush()
        results = transfersh_client.upload(
            files=[tmpfile.name],
            max_downloads=args.max_downloads,
            max_days=args.max_days)

for result in results:
    print(result['text'])
